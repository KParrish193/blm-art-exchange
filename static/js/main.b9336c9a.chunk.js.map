{"version":3,"sources":["assets/lightsimplelogo.png","utils/PrivateRoute.js","components/Header.js","components/About.js","components/Login.js","components/AdminDashboard.js","components/ArtistForm.js","components/CodeOfConduct.js","components/UploadForm.js","components/ArtistProduct.js","components/Products.js","components/Inquiry.js","components/Cart.js","components/Checkout.js","App.js","serviceWorker.js","contexts/ArtistContext.js","contexts/CartContext.js","index.js"],"names":["module","exports","PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","HeaderContainer","styled","div","Nav","Logo","img","Header","src","logo","ShoppingCartOutlined","Mission","className","Login","AdminDashboard","ArtistForm","CoC","UploadForm","ArtistProduct","Products","Inquiry","Cart","Checkout","App","exact","path","About","Boolean","window","location","hostname","match","ArtistContext","createContext","CartContext","ReactDOM","Provider","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,6C,iLCgB5BC,EAbM,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACxD,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAC,GACrB,OAAIC,aAAaC,QAAQ,SAClB,kBAACN,EAAcI,GAEf,kBAAC,IAAD,CAAUG,GAAG,iB,ihBCChC,IAAMC,EAAkBC,IAAOC,IAAV,KAUfC,EAAMF,IAAOC,IAAV,KAKHE,EAAOH,IAAOI,IAAV,KA6BKC,MAxBf,WACI,OACI,kBAACN,EAAD,KACI,kBAACG,EAAD,KAEA,kBAAC,IAAD,CAAMJ,GAAG,KACL,kBAACK,EAAD,CAAMG,IAAKC,OAGf,kBAAC,IAAD,KACI,yCAMJ,kBAAC,IAAD,CAAMT,GAAG,SACL,kBAACU,EAAA,EAAD,SCjCDC,MAZf,WACI,OACI,6BAEI,4BAAQC,UAAU,cACd,sD,KCMDC,MARf,WACI,OACI,+BCIOC,MATf,WAEI,OACI,+BCQOC,MATf,WAEI,OACI,+BCMOC,MATf,WACI,OACI,+BCKOC,MATf,WAEI,OACI,+BCMOC,MATf,WAEI,OACI,+BCMOC,MATf,WAEI,OACI,+BCSOC,MAVf,WAEI,OACI,+BCIOC,MATf,WACI,OACI,+BCSOC,MATf,WAEI,OACI,+BCkDOC,MA9Bf,WACE,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,MACA,6BACE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,IAAI/B,UAAYgC,IAClC,kBAAC,IAAD,CAAOD,KAAK,SAAS/B,UAAYmB,IACjC,kBAAC,IAAD,CAAOY,KAAK,QAAQ/B,UAAYyB,IAChC,kBAAC,IAAD,CAAOM,KAAK,YAAY/B,UAAYwB,IACpC,kBAAC,IAAD,CAAOO,KAAK,eAAe/B,UAAY0B,IACvC,kBAAC,IAAD,CAAOK,KAAK,QAAQ/B,UAAY2B,IAChC,kBAAC,IAAD,CAAOI,KAAK,YAAY/B,UAAY4B,IAGpC,kBAAC,IAAD,CAAOG,KAAK,WAAW/B,UAAYqB,IACnC,kBAAC,IAAD,CAAOU,KAAM,mBAAmB/B,UAAYsB,IAC5C,kBAAC,EAAD,CAAcS,KAAK,UAAU/B,UAAYuB,IAGzC,kBAAC,EAAD,CAAcQ,KAAM,SAAS/B,UAAYoB,QCrC/Ba,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DChBC,IAAMC,EAAgBC,0BCAhBC,EAAcD,0BCQ3BE,IAASvC,OAEP,kBAACoC,EAAcI,SAAf,KACA,kBAACF,EAAYE,SAAb,KACA,kBAAC,IAAD,KACA,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,UAKFC,SAASC,eAAe,SH8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b9336c9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lightsimplelogo.a4a79c5b.png\";","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route {...rest} render={props => {\n            if (localStorage.getItem('token')) {\n            return <Component {...props} />;\n            } else {\n            return <Redirect to=\"/login\" />;\n            }\n        }}\n        />\n    );\n};\n\nexport default PrivateRoute;","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport logo from '../assets/lightsimplelogo.png'\n\nimport styled from 'styled-components';\n\nimport { ShoppingCartOutlined } from '@ant-design/icons';\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0 auto;\n    background-color: #fff;\n    width: 90%;\n`\n\nconst Nav = styled.div`\n    display: flex;\n    align-items: center;\n`\n\nconst Logo = styled.img`\n    height: auto;\n    width: 100px;\n`\n\nfunction Header() {\n    return(\n        <HeaderContainer>\n            <Nav>\n\n            <Link to=\"/\">\n                <Logo src={logo} />\n            </Link>\n\n            <Link>\n                <p>About Us</p>\n            </Link>\n\n\n            </Nav>\n\n            <Link to=\"/cart\">\n                <ShoppingCartOutlined />\n            </Link>\n\n        </HeaderContainer>\n    )\n}\n\nexport default Header","import React from 'react';\n\nfunction Mission(){\n    return(\n        <div>\n            {/* mission statement/FAQ? or separate FAQ? */}\n            <header className=\"App-header\">\n                <p> What is Art x BLM? </p>\n            </header>\n            \n        </div>\n    )\n}\n\nexport default Mission","import React from 'react';\n\nimport { } from 'react-hook-form';\n\n\nfunction Login() {\n    return(\n        <div>\n            {/* login for artists/admin */}\n        </div>\n    )\n}\n\nexport default Login","import React from 'react'\n\nfunction AdminDashboard(){\n\n    return(\n        <div>\n            {/* dashboard for admin to manage site */}\n        </div>\n    )\n}\n\nexport default AdminDashboard","import React from 'react'\n\nimport { } from 'react-hook-form';\n\nfunction ArtistForm(){\n\n    return(\n        <div>\n            {/* artist sign-up form */}\n        </div>\n    )\n}\n\nexport default ArtistForm","import React from 'react';\n\nimport { } from 'react-hook-form';\n\nfunction CoC(){\n    return(\n        <div>\n            {/* code of conduct, checkbox to agree?*/}\n        </div>\n    )\n\n}\n\nexport default CoC","import React from 'react'\n\nfunction UploadForm(){\n\n    return(\n        <div>\n            {/* artist upload form */}\n        </div>\n    )\n}\n\nexport default UploadForm","import React from 'react'\n\nfunction ArtistProduct(){\n\n    return(\n        <div>\n            {/* display available artist products to buy, specific to single artist, perhaps artist details like social media. Link to inquiry */}\n        </div>\n    )\n}\n\nexport default ArtistProduct","import React from 'react'\n\nfunction Products(){\n\n    return(\n        <div>\n            {/* display all available artist products to buy */}\n        </div>\n    )\n}\n\nexport default Products","import React from 'react'\n\nimport { } from 'react-hook-form';\n\nfunction Inquiry(){\n\n    return(\n        <div>\n            {/* form to contact artist for specific requests */}\n            {/* dynamically populate artist contact info from artist context/filter based on artist opt-in */}\n        </div>\n    )\n}\n\nexport default Inquiry","import React from 'react';\n\nfunction Cart(){\n    return(\n        <div>\n            {/* cart */}\n        </div>\n    )\n\n}\n\nexport default Cart","import React from 'react'\n\nimport { } from 'react-hook-form';\n\nfunction Checkout(){\n\n    return(\n        <div>\n            {/* checkout of cart */}\n        </div>\n    )\n}\n\nexport default Checkout","import React from 'react';\n\n//app routing\nimport { Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './utils/PrivateRoute';\n\n//styles\nimport './App.css';\n\n//components\nimport Header from './components/Header';\n\nimport About from './components/About.js'\nimport Login from './components/Login';\n\nimport AdminDashboard from './components/AdminDashboard';\n\nimport ArtistForm from './components/ArtistForm';\nimport CoC from './components/CodeOfConduct';\nimport UploadForm from './components/UploadForm';\nimport ArtistProduct from './components/ArtistProduct';\n\nimport Products from './components/Products';\nimport Inquiry from './components/Inquiry';\nimport Cart from './components/Cart';\nimport Checkout from './components/Checkout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        <Switch>\n\n          {/* general */}\n          <Route exact path=\"/\" component={ About } />\n          <Route path=\"/login\" component={ Login } />\n          <Route path=\"/shop\" component={ Products } />\n          <Route path=\"/shop/:id\" component={ ArtistProduct } />\n          <Route path=\"/inquiry/:id\" component={ Inquiry } />\n          <Route path=\"/cart\" component={ Cart } />\n          <Route path=\"/checkout\" component={ Checkout } />\n\n          {/* artist */}\n          <Route path=\"/sign-up\" component={ ArtistForm } />\n          <Route path =\"/code-of-conduct\" component={ CoC } />\n          <PrivateRoute path=\"/upload\" component={ UploadForm } />\n\n          {/* admin */}\n          <PrivateRoute path =\"/admin\" component={ AdminDashboard } />\n\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createContext } from 'react';\n\nexport const ArtistContext = createContext();","import { createContext } from 'react';\n\nexport const CartContext = createContext();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ArtistContext } from './contexts/ArtistContext';\nimport { CartContext } from './contexts/CartContext';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  \n  <ArtistContext.Provider>\n  <CartContext.Provider>\n  <Router>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Router>\n  </CartContext.Provider>\n  </ArtistContext.Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}